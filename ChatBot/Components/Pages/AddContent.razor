@page "/addcontent"

@using System.Reflection
@using ChatBot.Services
@inject KernelMemoryService MemoryService
@rendermode InteractiveServer

<h1>Add Content</h1>

<h3 class="mt-5">Store text</h3>
<div>
    <textarea @bind="Content" style="width: 500px; height: 200px;" />
</div>
<div>
    <button class="btn btn-primary" @onclick="StoreText">Add text</button>
</div>

<h3 class="mt-5">Store web page</h3>
<div class="mb-2" style="display: flex; align-items: center;">
    <div style="width: 100px;">
        Web page
    </div>
    <input type="text" @bind="Url" style="width: 400px;"/>
</div>
<div>
    <button class="btn btn-primary" @onclick="StoreUrl">Add web page</button>
</div>

<h3 class="mt-5">Store file</h3>
<div>
    <InputFile OnChange="@LoadFiles" />
</div>

<div class="mt-5">
    <h2>
        @Output
    </h2>
</div>

@code {
    private string Content;
    private string Output;
    private string Url;

    private async Task StoreText()
    {
        Output = "Loading...";
        bool success = await MemoryService.StoreText(Content);
        if (success)
        {
            Output = "The text has been stored succesfully!";
            Content = string.Empty;
        }
        else
        {
            Output = "The text could not be stored!";
        }
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        Output = "Saving file in progress...";
        var stream = e.File.OpenReadStream();
        var directory = Path.GetDirectoryName(Environment.ProcessPath);
        var documentsPath = Path.Combine(directory, "Documents");
        if (!Directory.Exists(documentsPath))
        {
            Directory.CreateDirectory(documentsPath);
        }
        var path = Path.Combine(directory, "Documents", e.File.Name);
        
        using (var fileStream = new FileStream(path, FileMode.Create, FileAccess.Write))
        {
            await stream.CopyToAsync(fileStream);
        }

        await MemoryService.StoreFile(path, e.File.Name);
        Output = "File stored succesfully!";
    }

    private async Task StoreUrl()
    {
        Output = "Loading...";
        bool success = await MemoryService.StoreWebsite(Url);
        if (success)
        {
            Output = "The url has been stored succesfully!";
            Url = string.Empty;
        }
        else
        {
            Output = "The url could not be stored!";
        }
    }
}